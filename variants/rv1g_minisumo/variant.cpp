
#include "variant.h"

/*

SWCLK			- PORTA, 30
SWDIO			- PORTA, 31

*/



/*
 * Pins descriptions
 */
const PinDescription g_APinDescription[]=
{


  // 0..1 - SERCOM/UART (Serial4)
  // ----------------------
  // UART_TX		- PORTB, 8, SER4:0
  // UART_RX		- PORTB, 9, SER4:1
  { PORTB, 9, PIO_SERCOM_ALT, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_9 }, // RX: SERCOM4/PAD[1]
  { PORTB, 8, PIO_SERCOM_ALT, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_8 }, // TX: SERCOM4/PAD[0]


  // 2..6 - IR Sensor
  // ----------------------
  // IR SENSOR 1	- PORTB, 11
  // IR SENSOR 2	- PORTB, 10
  // IR SENSOR 3	- PORTA, 9
  // IR SENSOR 4	- PORTA, 7
  // IR SENSOR 5 	- PORTA, 4
  { PORTB, 11, PIO_INPUT, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_11 },
  { PORTB, 10, PIO_INPUT, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_10 },
  { PORTA, 9,  PIO_INPUT, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_9  },
  { PORTA, 7,  PIO_INPUT, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_7  },
  { PORTA, 4,  PIO_INPUT, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_4  }, 


  // 7..10 - Motor control
  // ----------------------
  // MOTOR1_1		- PORTA, 18
  // MOTOR2_2		- PORTA, 19
  // MOTOR1_2		- PORTA, 20
  // MOTOR2_1		- PORTA, 21
  { PORTA, 18, PIO_TIMER_ALT, (PIN_ATTR_DIGITAL|PIN_ATTR_PWM|PIN_ATTR_TIMER_ALT), No_ADC_Channel, PWM0_CH2, TCC0_CH2, EXTERNAL_INT_2 },
  { PORTA, 19, PIO_TIMER_ALT, (PIN_ATTR_DIGITAL|PIN_ATTR_PWM|PIN_ATTR_TIMER_ALT), No_ADC_Channel, PWM0_CH3, TCC0_CH3, EXTERNAL_INT_3 },
  { PORTA, 20, PIO_TIMER_ALT, (PIN_ATTR_DIGITAL|PIN_ATTR_PWM|PIN_ATTR_TIMER_ALT), No_ADC_Channel, PWM0_CH6, TCC0_CH6, EXTERNAL_INT_4 },
  { PORTA, 21, PIO_TIMER_ALT, (PIN_ATTR_DIGITAL|PIN_ATTR_PWM|PIN_ATTR_TIMER_ALT), No_ADC_Channel, PWM0_CH7, TCC0_CH7, EXTERNAL_INT_5 },

  // 11..12 - LED
  // ----------------------
  // LED1 			- PORTA, 2
  // LED2 			- PORTA, 3
  { PORTA, 2, PIO_OUTPUT, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_2 },
  { PORTA, 3, PIO_OUTPUT, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_3 },
  

  // 13..14 - Buttons
  // --------------------
  // BUTTON 1		- PORTA, 14
  // BUTTON 2		- PORTA, 28
  { PORTA, 14, PIO_INPUT_PULLUP, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_14 },
  { PORTA, 28, PIO_INPUT_PULLUP, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_8 },


  // 15..17 - Gyroscope
  // --------------------
  // GYRO_INT    - PORTA, 27
  // GYRO_SDA    - PORTA, 22, SER3:0
  // GYRO_SCL    - PORTA, 23, SER3:1
 
  { PORTA, 27, PIO_INPUT,  (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_15 },
  { PORTA, 22, PIO_SERCOM, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_6 },
  { PORTA, 23, PIO_SERCOM, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_7 },
 

  // 18..19 - OLED
  // OLED_SDA    - PORTA, 12, SER2:0
  // OLED_SCL    - PORTA, 13, SER2:1
  { PORTA, 12, PIO_SERCOM, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_6 },
  { PORTA, 13, PIO_SERCOM, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_7 },
 

  // 20..24 - Laser sensor
  // --------------------
  // LASER_SDA      - PORTA, 16, SER1:0
  // LASER_SCL      - PORTA, 17, SER1:1
  // LASER_1_RST    - PORTB, 23
  // LASER_2_RST    - PORTA, 15
  // LASER_3_RST    - PORTA, 8
  { PORTA, 16, PIO_SERCOM, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_0 },
  { PORTA, 17, PIO_SERCOM, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_1 },
  { PORTB, 23, PIO_DIGITAL, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_7 },
  { PORTA, 15, PIO_DIGITAL, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_15 },
  { PORTA, 8 , PIO_DIGITAL, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_8 },


  // 25 - NeoPixel
  // --------------------
  // LED_DATA    - PORTB, 22, SER5:2
  { PORTB, 22, PIO_SERCOM_ALT, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_6 },


  // 26 - IR LED transmitter
  // --------------------
  // IR_38KHZ    - PORTA, 6, TCC1:0
  { PORTA, 6, PIO_TIMER, (PIN_ATTR_DIGITAL|PIN_ATTR_PWM|PIN_ATTR_TIMER), No_ADC_Channel, PWM1_CH0, TCC1_CH0, EXTERNAL_INT_6 },


  // 27 - Buzzer
  // --------------------
  // BUZZER      - PORTA, 10
  { PORTA, 10, PIO_OUTPUT, (PIN_ATTR_DIGITAL), No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_10 },


  // 28..29 - USB
  // --------------------
  // USB_M		- PORTA, 24
  // USB_P		- PORTA, 25
  { PORTA, 24, PIO_COM, PIN_ATTR_NONE, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE }, // USB/DM
  { PORTA, 25, PIO_COM, PIN_ATTR_NONE, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE }, // USB/DP


    // 30..33 - Analog
  // --------------------
  // FLR SENSOR 1  - PORTA, 11, AIN19
  // FLR SENSOR 2  - PORTA,  5, AIN5
  // FLR SENSOR 3  - PORTB,  3, AIN11
  // ADC BATTERY   - PORTB,  2, AIN10
  { PORTA, 11, PIO_ANALOG, 0, ADC_Channel19, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_11 },
  { PORTA, 5 , PIO_ANALOG, 0, ADC_Channel5,  NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_5 },
  { PORTB, 3 , PIO_ANALOG, 0, ADC_Channel11, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_3 },
  { PORTB, 2 , PIO_ANALOG, 0, ADC_Channel10, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_2 },

  // 34
  // BUTTON 3  - PORTA, 31 (reusing the SWDIO line)
  { PORTA, 31, PIO_TIMER, (PIN_ATTR_DIGITAL|PIN_ATTR_PWM|PIN_ATTR_TIMER), No_ADC_Channel, PWM1_CH0, TCC1_CH0, EXTERNAL_INT_10 }, // p46
};

const void* g_apTCInstances[TCC_INST_NUM+TC_INST_NUM]={ TCC0, TCC1, TCC2, TC3, TC4, TC5 } ;

// Multi-serial objects instantiation
SERCOM sercom0( SERCOM0 ) ;
SERCOM sercom1( SERCOM1 ) ;
SERCOM sercom2( SERCOM2 ) ;
SERCOM sercom3( SERCOM3 ) ;
SERCOM sercom4( SERCOM4 ) ;
SERCOM sercom5( SERCOM5 ) ;


Uart Serial( &sercom4, PIN_SERIAL_RX, PIN_SERIAL_TX, PAD_SERIAL_RX, PAD_SERIAL_TX ) ;


void SERCOM4_Handler()
{
  Serial.IrqHandler();
}
